from aiogram import Dispatcher, types, F
from aiogram.filters import Command
from init import bot
from keyboards import kb_main,kb_info,kb_awards
from texts import *
import asyncio, logging, rating,day,week
from aiogram.fsm.storage.memory import MemoryStorage
dp = Dispatcher(bot=bot, storage=MemoryStorage())
logging.basicConfig(level=logging.INFO)
dp.include_router(rating.rt)
dp.include_router(day.rt)
dp.include_router(week.rt)
keyboard_award=types.ReplyKeyboardMarkup(keyboard=kb_awards,resize_keyboard=True)
keyboard = types.ReplyKeyboardMarkup(keyboard=kb_main,resize_keyboard=True)
keyboard_info = types.ReplyKeyboardMarkup(keyboard=kb_info,resize_keyboard=True)
@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer(hello, reply_markup=keyboard)
@dp.message(F.text=="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
async def info(message: types.Message):
    await message.answer(info_t, reply_markup=keyboard_info)

@dp.message(F.text=="üÜï –ù–æ–≤–æ—Å—Ç–∏")
async def news(message: types.Message):
    await message.answer(news_t,parse_mode="HTML")
@dp.message(F.text == "üí∞ –ü—Ä–µ–º–∏–∏")
async def awards(message: types.Message):
    await message.answer(awards_t)
@dp.message(F.text=="üÜí –ù–∞—à —á–∞—Ç")
async def chat(message: types.Message):
    await message.answer(chat_t)
@dp.message(F.text == "‚è™ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def news(message: types.Message):
    await start(message)

@dp.message(F.text == "‚ñ∂Ô∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def contacts(message: types.Message):
    await message.answer(contacts_t)
@dp.message(F.text == "üí∏ –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø—Ä–µ–º–∏—é")
async def contacts(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–µ–º–∏–∏", reply_markup=keyboard_award)
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())